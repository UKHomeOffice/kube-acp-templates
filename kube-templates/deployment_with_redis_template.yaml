apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: <service_name>
spec:
  replicas: 1 # or 2 for durability in production
  template:
    metadata:
      labels:
        name: <service_name>
        service: <service_name>
    spec:
      containers:
      - name: <service_name>
        image: docker.digital.homeoffice.gov.uk/ukhomeofficedigital/<team>/<service_name>:{{.DRONE_COMMIT_SHA}}
        imagePullPolicy: "Always"
        securityContext:
          runAsNonRoot: true
        resources:
          limits:
            memory: 200Mi
            cpu: 50m
        envFrom:
          - configMapRef:
              name: <service_name>-configmap
        env:
          - name: <secret_name_uppercase>
            valueFrom:
              secretKeyRef:
                name: <secret_name_lowercase>
                key: <secret_name_lowercase>
        ports:
          - containerPort: 8080 # OR alternative app port
        livenessProbe:
          httpGet:
            path: /health       # OR equivalent healthcheck endpoint
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health       # OR equivalent healthcheck endpoint
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      - name: redis             # OR use Redis Deployment file so sessions are not impacted by deployment file updates
        image: quay.io/ukhomeofficedigital/redis:v0.1.2
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true    # has to be set to run on ACP or it will be blocked
        ports:
          - containerPort: 6379 # default redis port
        env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: <redis_password_secret>
                key: <redis_password_secret>
          - name: USER
            value: '995'
        resources:
          limits:
            cpu: 10m
            memory: 100Mi
        volumeMounts:
          - mountPath: /var/lib/redis
            name: data            # references name of mounted volume below
      - name: keycloak-proxy
        image: quay.io/ukhomeofficedigital/go-keycloak-proxy:v2.2.2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        resources:
          limits:
            cpu: 10m
            memory: 100Mi
        imagePullPolicy: IfNotPresent
        env:
          - name: PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: <client_secret>
                key: <client_secret>
        args:
          - --discovery-url=https://sso-dev.notprod.homeoffice.gov.uk/auth/realms/<service_realm> # make request to ACP for one
          - --client-id=<realm_service_id>       # client id for service setup in your realm
          - --listen=127.0.0.1:8081              # listening for traffic from NGINX
          - --upstream-url=http://127.0.0.1:8080 # forward authenticated traffic to service port
          - --enable-json-logging
          - --upstream-keepalives=false
          - --cors-origins='*'
          - --secure-cookie=true
          - --http-only-cookie=true
          - --verbose=true
          - --resources=uri=/*
          # - --revocation-url=https://sso.digital.homeoffice.gov.uk/auth/realms/<realm>/protocol/openid-connect/logout
          # - --resources=uri=/signout_confirmation|white-listed=true
          # - --resources=uri=/health|white-listed=true
          # - --resources=uri=/*
          # - --enable-refresh-tokens=true
          # - --encryption-key=<encryption_key>
          # - --invalid-auth-redirects-with-303=true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - name: proxy
        image: quay.io/ukhomeofficedigital/nginx-proxy-govuk:v3.4.5
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        resources:
          limits:
            cpu: 10m
            memory: 100Mi
        env:
          - name: PROXY_SERVICE_HOST
            value: '127.0.0.1'
          - name: PROXY_SERVICE_PORT
            value: '8081'              # points to NGINX
          - name: LOG_FORMAT_NAME
            value: json
          - name: NAXSI_USE_DEFAULT_RULES
            value: 'FALSE'
          - name: CLIENT_MAX_BODY_SIZE
            value: '5000'
          - name: USER
            value: '1000'
          - name: VERBOSE_ERROR_PAGES
            value: 'TRUE'
          - name: NO_LOGGING_BODY
            value: 'FALSE'
          - name: NO_LOGGING_RESPONSE
            value: 'FALSE'
          - name: ERROR_REDIRECT_CODES
            value: 'FALSE'
        ports:
          - name: https
            containerPort: 10443
      imagePullSecrets:
      - name: <artifactory_image_pull_secret>
      volumes:
        - name: data # volume mount for redis referenced above
          emptyDir: {}
